/*

Awoo.css

Small responsive CSS boilerplate based on grids.
Author: https://github.com/0-l

*/
@charset "UTF-8";

@import url('https://fonts.googleapis.com/css?family=Roboto:300,400,500,700');

$cols: col !default;
$rows: row !default;

* {
    margin: 0;
    padding: 0;
    outline: 0;
    box-sizing: border-box;
}

h1,h2,h3,h4,h5,h6,p,span {
    font-family: 'Roboto', sans-serif;
}

.\-, .\|, .\+ {
    display: flex;
}

.\- { align-items: center; }
.\| { justify-content: center; }

.\+ {
    align-items: center;
    justify-content: center;
}

.\21\2d, .\21\7c, .\21\2b, .\21\5e,
.\21\7e, .\21\3c, .\21\5f, .\21\3e {
    position: absolute;
    margin: auto;
}

.\21\2d, .\21\2b, .\21\7e {
    right: 0;
    left: 0;
}

.\21\7c, .\21\2b, .\21\7e {
    top: 0;
    bottom: 0;
}

.\21\3c {
    left: 0;
}

.\21\5e {
    top: 0;
}

.\21\3e {
    right: 0;
}

.\21\5f {
    bottom: 0;
}

.push-right { float: right; }
.push-left { float: left; }

@mixin layout($size) {
    @for $i from 1 through $size {
        .col-#{$i} {
            --col: #{$i};
        }
        .row-#{$i} {
            --row: #{$i};
        }
    }

    cols {
        grid-template-columns: repeat($size, auto);
        height: 100%;
    }

    rows {
        grid-template-rows: repeat($size, auto);
        width: 100%;
        height: auto;
    }

    @for $num from 1 through $size {
        @for $i from 2 through $size {
            @if $num != $i and $i < $num {
                cols .col-#{$i}.col-#{$num} {
                    --col: #{$i} / calc(1 + #{$num});
                }
            }
        }
        cols .col-#{$num}.col-end {
            --col: calc((#{$num} - #{$size}) + #{$size}) / calc(#{$size} + 1);
        }
    }

    .col-1.col-2 {
        --col: 1 / calc(3);
    }

    $half: ($size / 2) + 1;
    $third: ($size / 3) + 1;

    .col-half {
        --col: 1 / #{$half};
    }

    .row-half {
        --row: 1 / #{$half};
    }

    .row-half-middle {
        --row: #{$half} / #{$size + 1};
    }

    .col-half-middle {
        --col: #{$half} / #{$size + 1};
    }

    .col-third {
        --col: 1 / #{$third};
    }

    .row-third {
        --row: 1 / #{$third};
    }

    .col-end {
        --col: #{$size};
    }

    .row-end {
        --row: #{$size};
    }
}

// @media screen and (max-width: 700px) {
//     @include layout($size: 6);
// }

@media screen and (min-width: 700px) {
    @include layout($size: 12);
}

cols, rows {
    display: grid;
}

[class*='col-'] {
    grid-column: var(--col);
}

[class*='row-'] {
    grid-row: var(--row);
}

.text-center {
    text-align: center;
}

.relative {
    position: relative
}
